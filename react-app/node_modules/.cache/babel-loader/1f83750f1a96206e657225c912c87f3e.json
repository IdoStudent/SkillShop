{"ast":null,"code":"import _classCallCheck from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\react_test\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\react_test\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\react_test\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\react_test\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\react_test\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Folders\\\\University Work\\\\PPE\\\\react_test\\\\my-app\\\\src\\\\ComponentDemo\\\\ComponentDemo.react.js\";\nimport * as React from \"react\";\nimport cn from \"classnames\";\nimport { Button } from \"tabler-react\";\nimport \"./ComponentDemo.css\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { prism } from \"react-syntax-highlighter/dist/styles/prism\";\nimport reactElementToJSXString from \"./react-element-to-jsx-string\";\n\nvar ComponentDemo =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ComponentDemo, _React$PureComponent);\n\n  function ComponentDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComponentDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComponentDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      codeOpen: false\n    };\n\n    _this.handleSourceButtonOnClick = function (e) {\n      e.preventDefault();\n\n      _this.setState(function (s) {\n        return {\n          codeOpen: !s.codeOpen\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ComponentDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          asString = _this$props.asString;\n      var codeOpen = this.state.codeOpen;\n      var classes = cn(\"ComponentDemo\", className);\n      return React.createElement(\"div\", {\n        className: classes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleSourceButtonOnClick,\n        size: \"sm\",\n        color: \"primary\",\n        outline: true,\n        className: \"viewSourceBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, codeOpen ? \"Close\" : \"Source\"), React.createElement(\"div\", {\n        className: \"example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, children), codeOpen && React.createElement(\"div\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(SyntaxHighlighter, {\n        language: \"jsx\",\n        style: prism,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, asString || reactElementToJSXString(children))));\n    }\n  }]);\n\n  return ComponentDemo;\n}(React.PureComponent);\n\nexport default ComponentDemo;","map":{"version":3,"sources":["E:\\Folders\\University Work\\PPE\\react_test\\my-app\\src\\ComponentDemo\\ComponentDemo.react.js"],"names":["React","cn","Button","Prism","SyntaxHighlighter","prism","reactElementToJSXString","ComponentDemo","state","codeOpen","handleSourceButtonOnClick","e","preventDefault","setState","s","props","className","children","asString","classes","PureComponent"],"mappings":";;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAO,qBAAP;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,KAAT,QAAsB,4CAAtB;AACA,OAAOC,uBAAP,MAAoC,+BAApC;;IAYMC,a;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAGRC,yB,GAA4B,UAACC,CAAD,EAA8C;AACxEA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,QAAL,CAAc,UAAAC,CAAC;AAAA,eAAK;AAAEL,UAAAA,QAAQ,EAAE,CAACK,CAAC,CAACL;AAAf,SAAL;AAAA,OAAf;AACD,K;;;;;;;6BAEQ;AAAA,wBACmC,KAAKM,KADxC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,QADZ,eACYA,QADZ;AAAA,UACsBC,QADtB,eACsBA,QADtB;AAAA,UAECT,QAFD,GAEc,KAAKD,KAFnB,CAECC,QAFD;AAGP,UAAMU,OAAO,GAAGlB,EAAE,CAAC,eAAD,EAAkBe,SAAlB,CAAlB;AACA,aACE;AAAK,QAAA,SAAS,EAAEG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,KAAKT,yBADhB;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,MAJT;AAKE,QAAA,SAAS,EAAC,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGD,QAAQ,GAAG,OAAH,GAAa,QAPxB,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BQ,QAA1B,CAVF,EAWGR,QAAQ,IACP;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAC,KAA5B;AAAkC,QAAA,KAAK,EAAEJ,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGa,QAAQ,IAAIZ,uBAAuB,CAACW,QAAD,CADtC,CADF,CAZJ,CADF;AAqBD;;;;EAlCyBjB,KAAK,CAACoB,a;;AAqClC,eAAeb,aAAf","sourcesContent":["// @flow\r\n\r\nimport * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport { Button } from \"tabler-react\";\r\nimport \"./ComponentDemo.css\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { prism } from \"react-syntax-highlighter/dist/styles/prism\";\r\nimport reactElementToJSXString from \"./react-element-to-jsx-string\";\r\n\r\ntype Props = {|\r\n  +children: React.Element<any>,\r\n  +className?: string,\r\n  +asString?: string,\r\n|};\r\n\r\ntype State = {|\r\n  codeOpen: boolean,\r\n|};\r\n\r\nclass ComponentDemo extends React.PureComponent<Props, State> {\r\n  state = {\r\n    codeOpen: false,\r\n  };\r\n  handleSourceButtonOnClick = (e: SyntheticMouseEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    this.setState(s => ({ codeOpen: !s.codeOpen }));\r\n  };\r\n\r\n  render() {\r\n    const { className, children, asString } = this.props;\r\n    const { codeOpen } = this.state;\r\n    const classes = cn(\"ComponentDemo\", className);\r\n    return (\r\n      <div className={classes}>\r\n        <Button\r\n          onClick={this.handleSourceButtonOnClick}\r\n          size=\"sm\"\r\n          color=\"primary\"\r\n          outline\r\n          className=\"viewSourceBtn\"\r\n        >\r\n          {codeOpen ? \"Close\" : \"Source\"}\r\n        </Button>\r\n        <div className=\"example\">{children}</div>\r\n        {codeOpen && (\r\n          <div className=\"highlight\">\r\n            <SyntaxHighlighter language=\"jsx\" style={prism}>\r\n              {asString || reactElementToJSXString(children)}\r\n            </SyntaxHighlighter>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentDemo;\r\n"]},"metadata":{},"sourceType":"module"}