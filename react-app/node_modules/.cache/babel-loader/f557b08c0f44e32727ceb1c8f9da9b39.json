{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = sortObject;\n\nfunction sortObject(value) {\n  // return non-object value as is\n  if (value === null || (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) !== \"object\") {\n    return value;\n  } // return date and regexp values as is\n\n\n  if (value instanceof Date || value instanceof RegExp) {\n    return value;\n  } // make a copy of array with each item passed through sortObject()\n\n\n  if (Array.isArray(value)) {\n    return value.map(sortObject);\n  } // make a copy of object with key sorted\n\n\n  return Object.keys(value).sort().reduce(function (result, key) {\n    // eslint-disable-next-line no-param-reassign\n    result[key] = sortObject(value[key]);\n    return result;\n  }, {});\n}","map":{"version":3,"sources":["../../src/formatter/sortObject.js"],"names":["sortObject","value","result"],"mappings":";;;;;;AAEwBA,C,GAAT,UAAA,GAAA,EAAA;AACb,SAAA,GAAA,IACIC,OAAAA,MAAAA,KAAJ,UADA,IAEE,GAAOA,CAAP,WAAA,KAAA,MAFF,IAGC,GAAA,KAAA,MAAA,CAAA,SAHD,G,QAAA,GAKA,OAAA,GALA;AAMA,C;;AAEC,OAAA,CAAA,OAAA,GAAA,UAAA;;;AAED;AACA,MACE,KAAA,KAAA,IAAA,IACD,CAAA,OAAA,KAAA,KAAA,WAAA,GAAA,WAAA,GAAA,OAAA,CAAA,KAAA,CAAA,MAAA,QAFD,E;AAIA,WAAA,KAAA;AACA,G,CAIIC;;;AACA,MAAA,KAAA,YAAA,IAAA,IAAA,KAAA,YAAA,MAAA,EAAA;AALJ,WAAA,KAAA;AAOD,G","sourcesContent":["/* @flow */\n\nexport default function sortObject(value: any): any {\n  // return non-object value as is\n  if (value === null || typeof value !== 'object') {\n    return value;\n  }\n\n  // return date and regexp values as is\n  if (value instanceof Date || value instanceof RegExp) {\n    return value;\n  }\n\n  // make a copy of array with each item passed through sortObject()\n  if (Array.isArray(value)) {\n    return value.map(sortObject);\n  }\n\n  // make a copy of object with key sorted\n  return Object.keys(value)\n    .sort()\n    .reduce((result, key) => {\n      // eslint-disable-next-line no-param-reassign\n      result[key] = sortObject(value[key]);\n      return result;\n    }, {});\n}\n"]},"metadata":{},"sourceType":"module"}