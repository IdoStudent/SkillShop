{"ast":null,"code":"import _classCallCheck from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\SkillShop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\SkillShop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\SkillShop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\SkillShop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\Folders\\\\University Work\\\\PPE\\\\SkillShop\\\\react-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\Folders\\\\University Work\\\\PPE\\\\SkillShop\\\\react-app\\\\src\\\\ReactSimpleMap\\\\ReactSimpleMap.react.js\";\nimport * as React from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography } from \"react-simple-maps\";\nimport data from \"./data/world-50m.json\";\nimport { scaleLinear } from \"d3-scale\";\nvar wrapperStyles = {\n  width: \"100%\",\n  height: \"auto\",\n  maxWidth: \"100%\",\n  margin: \"0 auto\",\n  fontFamily: \"Roboto, sans-serif\"\n};\nvar popScale = scaleLinear().domain([0, 100000000, 1400000000]).range([\"#CFD8DC\", \"#607D8B\", \"#37474F\"]);\n\nvar ReactSimpleMap =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ReactSimpleMap, _React$PureComponent);\n\n  function ReactSimpleMap() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReactSimpleMap);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReactSimpleMap)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      origin: {\n        x: 0,\n        y: 0\n      },\n      content: \"\"\n    };\n\n    _this.handleMove = function (geography, evt) {\n      var x = evt.clientX;\n      var y = evt.clientY + window.pageYOffset;\n\n      _this.setState({\n        origin: {\n          x: x,\n          y: y\n        },\n        content: geography.properties.name + \": \" + geography.properties.pop_est\n      });\n    };\n\n    _this.handleLeave = function () {\n      _this.setState({\n        content: \"\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactSimpleMap, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.content && React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: this.state.origin.y + 20 - window.scrollY,\n          left: this.state.origin.x,\n          zIndex: 999999,\n          textAlign: \"center\",\n          border: \"1px grey solid\",\n          borderRadius: 3,\n          padding: 4,\n          backgroundColor: \"#fff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.content), React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 205,\n          rotation: [-11, 0, 0]\n        },\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        width: 900,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [0, 20],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            onMouseMove: _this2.handleMove,\n            onMouseLeave: _this2.handleLeave,\n            style: {\n              default: {\n                fill: popScale(geography.properties.pop_est),\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#263238\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#263238\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          });\n        });\n      }))));\n    }\n  }]);\n\n  return ReactSimpleMap;\n}(React.PureComponent);\n\nexport default ReactSimpleMap;","map":{"version":3,"sources":["E:\\Folders\\University Work\\PPE\\SkillShop\\react-app\\src\\ReactSimpleMap\\ReactSimpleMap.react.js"],"names":["React","ComposableMap","ZoomableGroup","Geographies","Geography","data","scaleLinear","wrapperStyles","width","height","maxWidth","margin","fontFamily","popScale","domain","range","ReactSimpleMap","state","origin","x","y","content","handleMove","geography","evt","clientX","clientY","window","pageYOffset","setState","properties","name","pop_est","handleLeave","position","top","scrollY","left","zIndex","textAlign","border","borderRadius","padding","backgroundColor","scale","rotation","geographies","projection","map","i","default","fill","stroke","strokeWidth","outline","hover","pressed","PureComponent"],"mappings":"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","sourcesContent":["// @flow\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  ZoomableGroup,\r\n  Geographies,\r\n  Geography,\r\n} from \"react-simple-maps\";\r\nimport data from \"./data/world-50m.json\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\nconst wrapperStyles = {\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  maxWidth: \"100%\",\r\n  margin: \"0 auto\",\r\n  fontFamily: \"Roboto, sans-serif\",\r\n};\r\n\r\ntype State = {\r\n  origin: { x: number, y: number },\r\n  content: string,\r\n};\r\n\r\nconst popScale = scaleLinear()\r\n  .domain([0, 100000000, 1400000000])\r\n  .range([\"#CFD8DC\", \"#607D8B\", \"#37474F\"]);\r\n\r\nclass ReactSimpleMap extends React.PureComponent<void, State> {\r\n  state = {\r\n    origin: { x: 0, y: 0 },\r\n    content: \"\",\r\n  };\r\n\r\n  handleMove = (\r\n    geography: { properties: { name: string, pop_est: string } },\r\n    evt: SyntheticMouseEvent<>\r\n  ): void => {\r\n    const x = evt.clientX;\r\n    const y = evt.clientY + window.pageYOffset;\r\n    this.setState({\r\n      origin: { x, y },\r\n      content: geography.properties.name + \": \" + geography.properties.pop_est,\r\n    });\r\n  };\r\n\r\n  handleLeave = (): void => {\r\n    this.setState({ content: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={wrapperStyles}>\r\n        {this.state.content && (\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: this.state.origin.y + 20 - window.scrollY,\r\n              left: this.state.origin.x,\r\n              zIndex: 999999,\r\n              textAlign: \"center\",\r\n              border: \"1px grey solid\",\r\n              borderRadius: 3,\r\n              padding: 4,\r\n              backgroundColor: \"#fff\",\r\n            }}\r\n          >\r\n            {this.state.content}\r\n          </div>\r\n        )}\r\n        <ComposableMap\r\n          projectionConfig={{\r\n            scale: 205,\r\n            rotation: [-11, 0, 0],\r\n          }}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n          }}\r\n          width={900}\r\n        >\r\n          <ZoomableGroup center={[0, 20]}>\r\n            <Geographies geography={data}>\r\n              {(geographies, projection) =>\r\n                geographies.map((geography, i) => (\r\n                  <Geography\r\n                    key={i}\r\n                    geography={geography}\r\n                    projection={projection}\r\n                    onMouseMove={this.handleMove}\r\n                    onMouseLeave={this.handleLeave}\r\n                    style={{\r\n                      default: {\r\n                        fill: popScale(geography.properties.pop_est),\r\n                        stroke: \"#607D8B\",\r\n                        strokeWidth: 0.75,\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#263238\",\r\n                        stroke: \"#607D8B\",\r\n                        strokeWidth: 0.75,\r\n                        outline: \"none\",\r\n                      },\r\n                      pressed: {\r\n                        fill: \"#263238\",\r\n                        stroke: \"#607D8B\",\r\n                        strokeWidth: 0.75,\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                ))\r\n              }\r\n            </Geographies>\r\n          </ZoomableGroup>\r\n        </ComposableMap>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactSimpleMap;\r\n"]},"metadata":{},"sourceType":"module"}