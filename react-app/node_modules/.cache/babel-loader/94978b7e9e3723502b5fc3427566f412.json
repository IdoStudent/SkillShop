{"ast":null,"code":"// https://github.com/mightyiam/get-own-enumerable-property-symbols/blob/master/src/index.ts\nvar getOwnEnumPropSymbols = function getOwnEnumPropSymbols(object) {\n  return Object.getOwnPropertySymbols(object).filter(function (keySymbol) {\n    return object.propertyIsEnumerable(keySymbol);\n  });\n}; // https://github.com/sindresorhus/is-regexp/blob/master/index.js\n\n\nvar isRegexp = function isRegexp(input) {\n  return Object.prototype.toString.call(input) === \"[object RegExp]\";\n}; // https://github.com/sindresorhus/is-obj/blob/master/index.js\n\n\nvar isObj = function isObj(x) {\n  var type = typeof x;\n  return x !== null && (type === \"object\" || type === \"function\");\n};\n\nmodule.exports = function (val, opts, pad) {\n  var seen = [];\n  return function stringify(val, opts, pad) {\n    opts = opts || {};\n    opts.indent = opts.indent || \"\\t\";\n    pad = pad || \"\";\n    var tokens;\n\n    if (opts.inlineCharacterLimit === undefined) {\n      tokens = {\n        newLine: \"\\n\",\n        newLineOrSpace: \"\\n\",\n        pad: pad,\n        indent: pad + opts.indent\n      };\n    } else {\n      tokens = {\n        newLine: \"@@__STRINGIFY_OBJECT_NEW_LINE__@@\",\n        newLineOrSpace: \"@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@\",\n        pad: \"@@__STRINGIFY_OBJECT_PAD__@@\",\n        indent: \"@@__STRINGIFY_OBJECT_INDENT__@@\"\n      };\n    }\n\n    var expandWhiteSpace = function expandWhiteSpace(string) {\n      if (opts.inlineCharacterLimit === undefined) {\n        return string;\n      }\n\n      var oneLined = string.replace(new RegExp(tokens.newLine, \"g\"), \"\").replace(new RegExp(tokens.newLineOrSpace, \"g\"), \" \").replace(new RegExp(tokens.pad + \"|\" + tokens.indent, \"g\"), \"\");\n\n      if (oneLined.length <= opts.inlineCharacterLimit) {\n        return oneLined;\n      }\n\n      return string.replace(new RegExp(tokens.newLine + \"|\" + tokens.newLineOrSpace, \"g\"), \"\\n\").replace(new RegExp(tokens.pad, \"g\"), pad).replace(new RegExp(tokens.indent, \"g\"), pad + opts.indent);\n    };\n\n    if (seen.indexOf(val) !== -1) {\n      return '\"[Circular]\"';\n    }\n\n    if (val === null || val === undefined || typeof val === \"number\" || typeof val === \"boolean\" || typeof val === \"function\" || typeof val === \"symbol\" || isRegexp(val)) {\n      return String(val);\n    }\n\n    if (val instanceof Date) {\n      return \"new Date('\".concat(val.toISOString(), \"')\");\n    }\n\n    if (Array.isArray(val)) {\n      if (val.length === 0) {\n        return \"[]\";\n      }\n\n      seen.push(val);\n      var ret = \"[\" + tokens.newLine + val.map(function (el, i) {\n        var eol = val.length - 1 === i ? tokens.newLine : \",\" + tokens.newLineOrSpace;\n        var value = stringify(el, opts, pad + opts.indent);\n\n        if (opts.transform) {\n          value = opts.transform(val, i, value);\n        }\n\n        return tokens.indent + value + eol;\n      }).join(\"\") + tokens.pad + \"]\";\n      seen.pop(val);\n      return expandWhiteSpace(ret);\n    }\n\n    if (isObj(val)) {\n      var objKeys = Object.keys(val).concat(getOwnEnumPropSymbols(val));\n\n      if (objKeys.length === 0) {\n        return \"{}\";\n      }\n\n      seen.push(val);\n\n      var _ret = \"{\" + tokens.newLine + objKeys.map(function (el, i) {\n        if (opts.filter && !opts.filter(val, el)) {\n          return \"\";\n        }\n\n        var eol = objKeys.length - 1 === i ? tokens.newLine : \",\" + tokens.newLineOrSpace;\n        var isSymbol = typeof el === \"symbol\";\n        var isClassic = !isSymbol && /^[a-z$_][a-z$_0-9]*$/i.test(el);\n        var key = isSymbol || isClassic ? el : stringify(el, opts);\n        var value = stringify(val[el], opts, pad + opts.indent);\n\n        if (opts.transform) {\n          value = opts.transform(val, el, value);\n        }\n\n        return tokens.indent + String(key) + \": \" + value + eol;\n      }).join(\"\") + tokens.pad + \"}\";\n\n      seen.pop(val);\n      return expandWhiteSpace(_ret);\n    }\n\n    val = String(val).replace(/[\\r\\n]/g, function (x) {\n      return x === \"\\n\" ? \"\\\\n\" : \"\\\\r\";\n    });\n\n    if (opts.singleQuotes === false) {\n      val = val.replace(/\"/g, '\\\\\"');\n      return \"\\\"\".concat(val, \"\\\"\");\n    }\n\n    val = val.replace(/\\\\?'/g, \"\\\\'\");\n    return \"'\".concat(val, \"'\");\n  }(val, opts, pad);\n};","map":{"version":3,"sources":["E:\\Folders\\University Work\\PPE\\react_test\\my-app\\src\\ComponentDemo\\react-element-to-jsx-string\\stringifyObject.js"],"names":["getOwnEnumPropSymbols","object","Object","getOwnPropertySymbols","filter","keySymbol","propertyIsEnumerable","isRegexp","input","prototype","toString","call","isObj","x","type","module","exports","val","opts","pad","seen","stringify","indent","tokens","inlineCharacterLimit","undefined","newLine","newLineOrSpace","expandWhiteSpace","string","oneLined","replace","RegExp","length","indexOf","String","Date","toISOString","Array","isArray","push","ret","map","el","i","eol","value","transform","join","pop","objKeys","keys","concat","isSymbol","isClassic","test","key","singleQuotes"],"mappings":"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","sourcesContent":["// https://github.com/mightyiam/get-own-enumerable-property-symbols/blob/master/src/index.ts\r\nconst getOwnEnumPropSymbols = (object: Object): symbol[] =>\r\n  Object.getOwnPropertySymbols(object).filter(\r\n    (keySymbol): boolean => object.propertyIsEnumerable(keySymbol)\r\n  );\r\n\r\n// https://github.com/sindresorhus/is-regexp/blob/master/index.js\r\nconst isRegexp = input =>\r\n  Object.prototype.toString.call(input) === \"[object RegExp]\";\r\n\r\n// https://github.com/sindresorhus/is-obj/blob/master/index.js\r\nconst isObj = function(x) {\r\n  var type = typeof x;\r\n  return x !== null && (type === \"object\" || type === \"function\");\r\n};\r\n\r\nmodule.exports = (val, opts, pad) => {\r\n  const seen = [];\r\n\r\n  return (function stringify(val, opts, pad) {\r\n    opts = opts || {};\r\n    opts.indent = opts.indent || \"\\t\";\r\n    pad = pad || \"\";\r\n\r\n    let tokens;\r\n\r\n    if (opts.inlineCharacterLimit === undefined) {\r\n      tokens = {\r\n        newLine: \"\\n\",\r\n        newLineOrSpace: \"\\n\",\r\n        pad,\r\n        indent: pad + opts.indent,\r\n      };\r\n    } else {\r\n      tokens = {\r\n        newLine: \"@@__STRINGIFY_OBJECT_NEW_LINE__@@\",\r\n        newLineOrSpace: \"@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@\",\r\n        pad: \"@@__STRINGIFY_OBJECT_PAD__@@\",\r\n        indent: \"@@__STRINGIFY_OBJECT_INDENT__@@\",\r\n      };\r\n    }\r\n\r\n    const expandWhiteSpace = string => {\r\n      if (opts.inlineCharacterLimit === undefined) {\r\n        return string;\r\n      }\r\n\r\n      const oneLined = string\r\n        .replace(new RegExp(tokens.newLine, \"g\"), \"\")\r\n        .replace(new RegExp(tokens.newLineOrSpace, \"g\"), \" \")\r\n        .replace(new RegExp(tokens.pad + \"|\" + tokens.indent, \"g\"), \"\");\r\n\r\n      if (oneLined.length <= opts.inlineCharacterLimit) {\r\n        return oneLined;\r\n      }\r\n\r\n      return string\r\n        .replace(\r\n          new RegExp(tokens.newLine + \"|\" + tokens.newLineOrSpace, \"g\"),\r\n          \"\\n\"\r\n        )\r\n        .replace(new RegExp(tokens.pad, \"g\"), pad)\r\n        .replace(new RegExp(tokens.indent, \"g\"), pad + opts.indent);\r\n    };\r\n\r\n    if (seen.indexOf(val) !== -1) {\r\n      return '\"[Circular]\"';\r\n    }\r\n\r\n    if (\r\n      val === null ||\r\n      val === undefined ||\r\n      typeof val === \"number\" ||\r\n      typeof val === \"boolean\" ||\r\n      typeof val === \"function\" ||\r\n      typeof val === \"symbol\" ||\r\n      isRegexp(val)\r\n    ) {\r\n      return String(val);\r\n    }\r\n\r\n    if (val instanceof Date) {\r\n      return `new Date('${val.toISOString()}')`;\r\n    }\r\n\r\n    if (Array.isArray(val)) {\r\n      if (val.length === 0) {\r\n        return \"[]\";\r\n      }\r\n\r\n      seen.push(val);\r\n\r\n      const ret =\r\n        \"[\" +\r\n        tokens.newLine +\r\n        val\r\n          .map((el, i) => {\r\n            const eol =\r\n              val.length - 1 === i\r\n                ? tokens.newLine\r\n                : \",\" + tokens.newLineOrSpace;\r\n            let value = stringify(el, opts, pad + opts.indent);\r\n            if (opts.transform) {\r\n              value = opts.transform(val, i, value);\r\n            }\r\n            return tokens.indent + value + eol;\r\n          })\r\n          .join(\"\") +\r\n        tokens.pad +\r\n        \"]\";\r\n\r\n      seen.pop(val);\r\n\r\n      return expandWhiteSpace(ret);\r\n    }\r\n\r\n    if (isObj(val)) {\r\n      const objKeys = Object.keys(val).concat(getOwnEnumPropSymbols(val));\r\n\r\n      if (objKeys.length === 0) {\r\n        return \"{}\";\r\n      }\r\n\r\n      seen.push(val);\r\n\r\n      const ret =\r\n        \"{\" +\r\n        tokens.newLine +\r\n        objKeys\r\n          .map((el, i) => {\r\n            if (opts.filter && !opts.filter(val, el)) {\r\n              return \"\";\r\n            }\r\n\r\n            const eol =\r\n              objKeys.length - 1 === i\r\n                ? tokens.newLine\r\n                : \",\" + tokens.newLineOrSpace;\r\n            const isSymbol = typeof el === \"symbol\";\r\n            const isClassic = !isSymbol && /^[a-z$_][a-z$_0-9]*$/i.test(el);\r\n            const key = isSymbol || isClassic ? el : stringify(el, opts);\r\n            let value = stringify(val[el], opts, pad + opts.indent);\r\n            if (opts.transform) {\r\n              value = opts.transform(val, el, value);\r\n            }\r\n            return tokens.indent + String(key) + \": \" + value + eol;\r\n          })\r\n          .join(\"\") +\r\n        tokens.pad +\r\n        \"}\";\r\n\r\n      seen.pop(val);\r\n\r\n      return expandWhiteSpace(ret);\r\n    }\r\n\r\n    val = String(val).replace(/[\\r\\n]/g, x => (x === \"\\n\" ? \"\\\\n\" : \"\\\\r\"));\r\n\r\n    if (opts.singleQuotes === false) {\r\n      val = val.replace(/\"/g, '\\\\\"');\r\n      return `\"${val}\"`;\r\n    }\r\n\r\n    val = val.replace(/\\\\?'/g, \"\\\\'\");\r\n    return `'${val}'`;\r\n  })(val, opts, pad);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}