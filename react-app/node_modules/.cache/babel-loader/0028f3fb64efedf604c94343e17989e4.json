{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable no-use-before-define */\n\nvar createStringTreeNode = exports.createStringTreeNode = function createStringTreeNode( // eslint-disable-line no-unused-vars\nvalue) {\n  return {\n    type: \"string\",\n    value: value\n  };\n};\n\nvar createNumberTreeNode = exports.createNumberTreeNode = function createNumberTreeNode( // eslint-disable-line no-unused-vars\nvalue) {\n  return {\n    type: \"number\",\n    value: value\n  };\n};\n\nvar createReactElementTreeNode = exports.createReactElementTreeNode = function createReactElementTreeNode( // eslint-disable-line no-unused-vars\ndisplayName, props, defaultProps, childrens) {\n  return {\n    type: \"ReactElement\",\n    displayName: displayName,\n    props: props,\n    defaultProps: defaultProps,\n    childrens: childrens\n  };\n};\n\nvar createReactFragmentTreeNode = exports.createReactFragmentTreeNode = function createReactFragmentTreeNode( // eslint-disable-line no-unused-vars\nkey, childrens) {\n  return {\n    type: \"ReactFragment\",\n    key: key,\n    childrens: childrens\n  };\n};","map":{"version":3,"sources":["../src/tree.js"],"names":["type","value","createNumberTreeNode","childrens","createReactFragmentTreeNode"],"mappings":";;;;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,oBAAA,GAAA,SAAA,oBAAA,EAAA;KAAA,EAqCO;AAA6B,SAAoC;AACtEA,IAAAA,IAAAA,EADsE,QAAA;AAEtEC,IAAAA,KAAAA,EAAAA;AAFsE,GAApC;AAA7B,CArCP;;AA0CO,IAAMC,oBAAAA,GAAAA,OAAAA,CAAAA,oBAAAA,GAAAA,SAAAA,oBAAAA,EAAuB;AAAA,KAAvBA,EAA2D;AAEtED,SAAAA;AAFkC,IAAA,IAAA,EAAA,QAElCA;AAFK,IAAA,KAAA,EAAA;AAELA,GAAAA;AAGK,CALA;;AAWLD,IAD0B,0BAAA,GAAA,OAAA,CAAA,0BAAA,GAAA,SAAA,0BAAA,EAAA;AAAA,WAAA,EAAA,KAAA,EAAA,YAAA,EAK1BG,SAL0B,EALc;AAAnC,SAAA;wBAAA;AAaMC,IAAAA,WAAAA,EAAAA,WAbN;AAaoC,IAAA,KAGd,EAAA,KAhBtB;AAiBLJ,IAAAA,YAAM,EADqB,YAhBtB;AAgBsB,IAAA,SAAA,EAAA;AAhBtB,GAAA;AAaoC,CAPzCA","sourcesContent":["/* @flow */\n/* eslint-disable no-use-before-define */\n\nimport type { Key } from 'react';\n\ntype PropsType = { [key: string]: any };\ntype DefaultPropsType = { [key: string]: any };\n\nexport type StringTreeNode = {|\n  type: 'string',\n  value: string,\n|};\n\nexport type NumberTreeNode = {|\n  type: 'number',\n  value: number,\n|};\n\nexport type ReactElementTreeNode = {|\n  type: 'ReactElement',\n  displayName: string,\n  props: PropsType,\n  defaultProps: DefaultPropsType,\n  childrens: TreeNode[],\n|};\n\nexport type ReactFragmentTreeNode = {|\n  type: 'ReactFragment',\n  key: ?Key,\n  childrens: TreeNode[],\n|};\n\nexport type TreeNode =\n  | StringTreeNode\n  | NumberTreeNode\n  | ReactElementTreeNode\n  | ReactFragmentTreeNode;\n\nexport const createStringTreeNode = (value: string): StringTreeNode => ({\n  type: 'string',\n  value,\n});\n\nexport const createNumberTreeNode = (value: number): NumberTreeNode => ({\n  type: 'number',\n  value,\n});\n\nexport const createReactElementTreeNode = (\n  displayName: string,\n  props: PropsType,\n  defaultProps: DefaultPropsType,\n  childrens: TreeNode[]\n): ReactElementTreeNode => ({\n  type: 'ReactElement',\n  displayName,\n  props,\n  defaultProps,\n  childrens,\n});\n\nexport const createReactFragmentTreeNode = (\n  key: ?Key,\n  childrens: TreeNode[]\n): ReactFragmentTreeNode => ({\n  type: 'ReactFragment',\n  key,\n  childrens,\n});\n"]},"metadata":{},"sourceType":"module"}